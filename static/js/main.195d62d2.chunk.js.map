{"version":3,"sources":["components/product-images/Coffee-Bags-Flags-Colombia.png","components/product-images/Coffee-Bags-Flags-India.png","components/product-images/Coffee-Bags-Flags-Brazil.png","components/product-images/Coffee-Bags-Flags-Ecuador.png","components/product-images/Coffee-Bags-Flags-Peru.png","components/product-images/Coffee-Bags-Flags-Kenya.png","components/svg/bars-solid.svg","components/svg/shopping-cart-solid.svg","components/svg/times-solid.svg","components/svg/SocietyCoffee-Logo-Web.svg","components/assets/No-Cofee-mug.jpg","components/assets/great-coffee-bean-Society-Coffee.jpg","components/assets/About-us.png","components/assets/About-Hero-Bean-Bush.jpg","components/Context.js","components/Header.js","components/section/Products.js","components/section/Details.js","components/BasketEmpty/index.js","components/section/Cart.js","components/Section.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DataContext","React","createContext","DataProvider","state","products","_id","title","src","India","description","content","price","count","Brazil","Ecuador","Peru","Kenya","Colombia","cart","total","addCart","id","check","every","item","console","log","data","filter","product","setState","alert","reduction","forEach","getTotal","increase","removeProduct","window","confirm","index","splice","res","reduce","prev","localStorage","setItem","JSON","stringify","this","dataCart","parse","getItem","dataTotal","Provider","value","props","children","Component","Header","toggle","menuToggle","context","className","onClick","Menu","alt","width","to","Logo","Close","length","Cart","contextType","Products","Details","getProduct","match","params","map","key","BasketEmpty","style","backgroundImage","noCoffee","textAlign","Section","Footer","type","name","placeholder","App","basename","process","StrictMode","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.195d62d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-Colombia.5ed1508c.png\";","module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-India.ae542c23.png\";","module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-Brazil.bd86e862.png\";","module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-Ecuador.e86334b0.png\";","module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-Peru.e12cac09.png\";","module.exports = __webpack_public_path__ + \"static/media/Coffee-Bags-Flags-Kenya.43a4a4c1.png\";","module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.8bf1af37.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.2c5552a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/SocietyCoffee-Logo-Web.10e65949.svg\";","module.exports = __webpack_public_path__ + \"static/media/No-Cofee-mug.6cefa761.jpg\";","module.exports = __webpack_public_path__ + \"static/media/great-coffee-bean-Society-Coffee.2c42a0ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/About-us.d4b448ce.png\";","module.exports = __webpack_public_path__ + \"static/media/About-Hero-Bean-Bush.09ac7095.jpg\";","import React, { Component } from \"react\";\n\n//imports all the product images\nimport India from \"./product-images/Coffee-Bags-Flags-India.png\";\nimport Brazil from \"./product-images/Coffee-Bags-Flags-Brazil.png\";\nimport Ecuador from \"./product-images/Coffee-Bags-Flags-Ecuador.png\";\nimport Peru from \"./product-images/Coffee-Bags-Flags-Peru.png\";\nimport Kenya from \"./product-images/Coffee-Bags-Flags-Kenya.png\";\nimport Colombia from \"./product-images/Coffee-Bags-Flags-Colombia.png\";\n\n//Creates context for the site enabling values to be shared across the site\nexport const DataContext = React.createContext();\n\n//The will provide data to the rest site\nexport class DataProvider extends Component {\n  state = {\n    //The products and details sit within this array and can be accessed by the rest of the site\n    products: [\n      {\n        _id: \"1\",\n        title: \"Taste of India - 200g\",\n        src: `${India}`,\n        description: \"• Chocolate • Cedar • Smokey\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 6.95,\n        count: 1,\n      },\n      {\n        _id: \"2\",\n        title: \"Taste of Brazil - 200g\",\n        src: `${Brazil}`,\n        description: \"• Hazelnut • Cedar • Cherry\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 7.95,\n        count: 1,\n      },\n      {\n        _id: \"3\",\n        title: \"Taste of Ecuador - 200g\",\n        src: `${Ecuador}`,\n        description: \"• Rich • Fruity • Smoooth\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 6.95,\n        count: 1,\n      },\n      {\n        _id: \"4\",\n        title: \"Taste of Peru - 200g\",\n        src: `${Peru}`,\n        description: \"• Dry • Full bodied • Smokey\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 8.95,\n        count: 1,\n      },\n      {\n        _id: \"5\",\n        title: \"Taste of Kenya - 200g\",\n        src: `${Kenya}`,\n        description: \"• Cherry • Acidic • Earthy\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 7.95,\n        count: 1,\n      },\n      {\n        _id: \"6\",\n        title: \"Taste of Colombia - 200g\",\n        src: `${Colombia}`,\n        description: \"• Rich • Fruity • Smoooth\",\n        content:\n          \"Robusta cappuccino, sugar, single origin mazagran redeye milk siphon. Siphon, robusta crema extraction variety con panna whipped. Milk strong cinnamon at froth barista cup siphon. Skinny, bar single shot doppio, black, java, rich sugar bar grounds single origin. Frappuccino, cinnamon mocha as latte grounds caramelization half and half froth cappuccino. Viennese, body, latte roast that breve black. Aromatic medium aftertaste percolator skinny, id cappuccino con panna crema kopi-luwak plunger pot con panna. Carajillo mug to go doppio, sugar, a dark, fair trade as steamed cinnamon macchiato.\",\n        price: 6.95,\n        count: 1,\n      },\n    ],\n    cart: [],\n    total: 0,\n  };\n  //This is the add to cart function and adds items to cart by their id. It will also notify users if the item is already in the cart.\n  addCart = (id) => {\n    const { products, cart } = this.state;\n    const check = cart.every((item) => {\n      return item._id !== id;\n    });\n    if (check) {\n      console.log(check);\n      const data = products.filter((product) => {\n        return product._id === id;\n      });\n      this.setState({ cart: [...cart, ...data] });\n    } else {\n      alert(\"This product is already in your cart!\");\n    }\n  };\n  //This function decreases the quantity of an item in the cart\n  reduction = (id) => {\n    const { cart } = this.state;\n    cart.forEach((item) => {\n      if (item._id === id) {\n        item.count === 1 ? (item.count = 1) : (item.count -= 1);\n      }\n    });\n    this.setState({ cart: cart });\n    this.getTotal();\n  };\n  //This function increases the quantity of an item in the cart\n  increase = (id) => {\n    const { cart } = this.state;\n    cart.forEach((item) => {\n      if (item._id === id) {\n        item.count += 1;\n      }\n    });\n    this.setState({ cart: cart });\n    this.getTotal();\n  };\n  //This function removes the item from the cart and renders a confirmation message\n  removeProduct = (id) => {\n    if (window.confirm(\"Do you want to remove this item?\")) {\n      const { cart } = this.state;\n      cart.forEach((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n      });\n      this.setState({ cart: cart });\n      this.getTotal();\n    }\n  };\n  //This calcualtes the total in the cart\n  getTotal = () => {\n    const { cart } = this.state;\n    const res = cart.reduce((prev, item) => {\n      return prev + item.price * item.count;\n    }, 0);\n    this.setState({ total: res });\n  };\n  //Stores cart details locally\n  componentDidUpdate() {\n    localStorage.setItem(\"dataCart\", JSON.stringify(this.state.cart));\n    localStorage.setItem(\"dataTotal\", JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem(\"dataCart\"));\n    if (dataCart !== null) {\n      this.setState({ cart: dataCart });\n    }\n    const dataTotal = JSON.parse(localStorage.getItem(\"dataTotal\"));\n    if (dataCart !== null) {\n      this.setState({ total: dataTotal });\n    }\n  }\n\n  render() {\n    const { products, cart, total } = this.state;\n    const { addCart, reduction, increase, removeProduct, getTotal } = this;\n    //Returns all the cart functionality\n    return (\n      <DataContext.Provider\n        value={{\n          products,\n          addCart,\n          cart,\n          reduction,\n          increase,\n          removeProduct,\n          total,\n          getTotal,\n        }}\n      >\n        {this.props.children}\n      </DataContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/Header.css\";\nimport { DataContext } from \"./Context\";\n\n//imports images used in the nan\nimport Menu from \"./svg/bars-solid.svg\";\nimport Cart from \"./svg/shopping-cart-solid.svg\";\nimport Close from \"./svg/times-solid.svg\";\nimport Logo from \"./svg/SocietyCoffee-Logo-Web.svg\";\n\nexport class Header extends Component {\n  static contextType = DataContext;\n  //sets the responsive menu state to false\n  state = {\n    toggle: false,\n  };\n  //toggles the responsive menu\n  menuToggle = () => {\n    this.setState({ toggle: !this.state.toggle });\n  };\n\n  render() {\n    const { toggle } = this.state;\n    const { cart } = this.context;\n    //returns the Top Nav\n    return (\n      <header>\n        <div className=\"menu\" onClick={this.menuToggle}>\n          <img src={Menu} alt=\"\" width=\"20\" />\n        </div>\n        <div className=\"logo\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"\" width=\"150\" />\n          </Link>\n        </div>\n        <nav>\n          <ul className={toggle ? \"toggle\" : \"\"} onClick={this.menuToggle}>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/product\">Shop</Link>\n            </li>\n\n            <li>\n              <Link to=\"/about\">About us</Link>\n            </li>\n            <li className=\"close\">\n              <img src={Close} alt=\"\" width=\"20\" />\n            </li>\n          </ul>\n          <div className=\"nav-cart\">\n            <span>{cart.length}</span>\n            <Link to=\"/cart\">\n              <img src={Cart} alt=\"\" width=\"20\" />\n            </Link>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../Context\";\nimport \"../css/Products.css\";\n\nexport class Products extends Component {\n  static contextType = DataContext;\n\n  render() {\n    const { products } = this.context;\n    return (\n      //the map function finds the product in the array based on its id\n      <div id=\"product\">\n        {products.map((product) => (\n          <div className=\"card\" key={product._id}>\n            <Link to={`/product/${product._id}`}>\n              <img src={product.src} alt=\"\" />\n            </Link>\n            <div className=\"content\">\n              <h4>\n                <Link to={`/product/${product._id}`}>{product.title}</Link>\n              </h4>\n              <span>£{product.price}</span>\n              <p>{product.description}</p>\n              <button onClick={() => this.context.addCart(product._id)}>\n                Add to cart\n              </button>\n              <Link to={`/product/${product._id}`}>\n                <button className=\"info-btn\">More info</button>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","import React, { Component } from \"react\";\nimport { DataContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Details.css\";\n\nexport class Details extends Component {\n  static contextType = DataContext;\n  state = {\n    product: [],\n  };\n\n  getProduct = () => {\n    if (this.props.match.params.id) {\n      const res = this.context.products;\n      const data = res.filter((item) => {\n        return item._id === this.props.match.params.id;\n      });\n      this.setState({ product: data });\n    }\n  };\n\n  componentDidMount() {\n    this.getProduct();\n  }\n\n  render() {\n    const { product } = this.state;\n    const { addCart } = this.context;\n    return (\n      <>\n        <div className=\"breadcrumb\">\n          <Link to=\"/product\">◄ Back to shop</Link>\n        </div>\n\n        {product.map((item) => (\n          <div className=\"details\" key={item._id}>\n            <img src={item.src} alt=\"\" />\n            <div className=\"box\">\n              <div className=\"row\">\n                <h3>{item.title}</h3>\n                <span>£{item.price}</span>\n                <p>{item.description}</p>\n                <p>{item.content}</p>\n\n                <Link\n                  to=\"/cart\"\n                  className=\"cart\"\n                  onClick={() => addCart(item._id)}\n                >\n                  {\" \"}\n                  <button>Add to cart </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default Details;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport noCoffee from \"./../assets/No-Cofee-mug.jpg\";\n\nconst BasketEmpty = (props) => {\n  return (\n    <div className=\"basket\">\n      <div className=\"wrap\">\n        <div\n          className=\"item\"\n          style={{\n            backgroundImage: `url(${noCoffee})`,\n          }}\n        >\n          <Link to=\"/product\">\n            <button className=\"primary-btn\">Shop Coffee</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BasketEmpty;\n","import React, { Component } from \"react\";\nimport { DataContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport BasketEmpty from \"./../BasketEmpty/index\";\n\nimport \"../css/Cart.css\";\n\nexport class Cart extends Component {\n  static contextType = DataContext;\n  //Gets the cart total from context\n  componentDidMount() {\n    this.context.getTotal();\n  }\n  //This renders if the cart is empty\n  render() {\n    const { cart, increase, reduction, removeProduct, total } = this.context;\n    if (cart.length === 0) {\n      return (\n        <div className=\"basket\">\n          <h2 style={{ textAlign: \"center\" }}>Your Basket is Empty</h2>\n          <BasketEmpty />\n        </div>\n      );\n    } else {\n      return (\n        //This renders if there is and item/s in the cart\n        <>\n          <div className=\"breadcrumb\">\n            <Link to=\"/product\">◄ Back to shop</Link>\n          </div>\n          {cart.map((item) => (\n            <div className=\"details\" key={item._id}>\n              <img className=\"cart-img\" src={item.src} alt=\"Coffee-Bag\" />\n              <div className=\"box\">\n                <div className=\"row\">\n                  <h4>{item.title}</h4>\n                  <span>\n                    £{Math.round(item.price * item.count * 100) / 100}\n                  </span>\n\n                  <div className=\"amount\">\n                    <button\n                      className=\"count\"\n                      onClick={() => reduction(item._id)}\n                    >\n                      {\" \"}\n                      -{\" \"}\n                    </button>\n                    <span>{item.count}</span>\n                    <button\n                      className=\"count\"\n                      onClick={() => increase(item._id)}\n                    >\n                      {\" \"}\n                      +{\" \"}\n                    </button>\n                  </div>\n                  <div\n                    className=\"delete\"\n                    onClick={() => removeProduct(item._id)}\n                  >\n                    Remove item\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n          <div className=\"total\">\n            <Link to=\"/payment\">Check out</Link>\n            <h3>Total: £{Math.round(total * 100) / 100}</h3>\n          </div>\n        </>\n        //The Math.round rounds the total to 2 decimal places\n      );\n    }\n  }\n}\n\nexport default Cart;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n//imports the various sections or pages to the section\nimport Products from \"./section/Products\";\nimport Details from \"./section/Details\";\nimport Cart from \"./section/Cart\";\nimport Payment from \"./section/Payment\";\nimport Homepage from \"./section/Homepage\";\nimport About from \"./section/About\";\n\nfunction Section(props) {\n  return (\n    // Declares the page routes\n    <Switch>\n      <section>\n        <Route path=\"/\" component={Homepage} exact />\n        <Route path=\"/product\" component={Products} exact />\n        <Route path=\"/product/:id\" component={Details} />\n        <Route path=\"/cart\" component={Cart} />\n        <Route path=\"/payment\" component={Payment} />\n        <Route path=\"/about\" component={About} />\n      </section>\n    </Switch>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport \"./css/Footer.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-wrapper\">\n      <div className=\"footer\">\n        <div className=\"ft-col-1\">\n          <h4 className=\"ft-title\">Society Coffee</h4>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/product\">Shop</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About us</Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"ft-col-2\">\n          <h4 className=\"ft-title\">Customer Care</h4>\n          <ul>\n            <li>\n              <Link to=\"/\">Contact us</Link>\n            </li>\n            <li>\n              <Link to=\"/\">FAQs</Link>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <div className=\"ft-col-3\">\n            <h4 className=\"ft-title\">\n              Sign up to our newsletter to receive the latest news & offers.\n            </h4>\n            <input\n              className=\"ft-input\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email address\"\n            />\n            <input className=\"subscribe-btn\" type=\"submit\" value=\"Subscribe\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n//Browser router keeps UI in sync with URL\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./app.css\";\n\n//importing the structural components of the website in the main App\nimport Header from \"./components/Header\";\nimport Section from \"./components/Section\";\nimport Footer from \"./components/Footer\";\nimport { DataProvider } from \"./components/Context\";\n\n//Test\n\n//This function exports the various components that make up the website. This includes the Header, section or body and the Footer\nfunction App(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <DataProvider>\n        <React.StrictMode>\n          <Header />\n          <div className=\"app\">\n            <Section />\n          </div>\n          <Footer />\n        </React.StrictMode>\n      </DataProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}